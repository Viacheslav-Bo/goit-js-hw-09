{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь-якими функціями об’єкт formData з полями email та message,\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n\nconst formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.feedback-form');\nconst localStorageKey = 'feedback-form-state';\n\n//===================================================================\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n// Якщо так, використовуй їх для заповнення форми та об'єкта formData.\n// Якщо ні, залиш поля форми порожніми.\n\nfunction autoFill() {\n  const saveData = JSON.parse(localStorage.getItem(localStorageKey)) || {};\n  if (saveData.email) {\n    form.elements.email.value = saveData.email;\n    formData.email = saveData.email;\n  }\n  if (saveData.message) {\n    form.elements.message.value = saveData.message;\n    formData.message = saveData.message;\n  }\n}\n\nautoFill();\n//===================================================================\n// Використовуй метод делегування для відстеження змін у формі через подію input.\n// Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище.\n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n\nform.addEventListener('input', evt => {\n  if (evt.target.name === 'email') {\n    formData.email = evt.target.value;\n  } else if (evt.target.name === 'message') {\n    formData.message = evt.target.value;\n  }\n\n  localStorage.setItem(localStorageKey, JSON.stringify(formData));\n  console.log(localStorage);\n});\nconsole.log(localStorage);\n\n//===================================================================\n// Перед відправленням форми переконайся, що обидва поля форми заповнені.\n// Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields».\n// Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище,\n// об’єкт formData і поля форми.\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const email = form.elements.email.value.trim();\n  const message = form.elements.message.value.trim();\n\n  if (email === '' || message === '') {\n    return alert('Fill please all fields');\n  }\n\n  console.log(`email: ${evt.target.elements.email.value}`);\n  console.log(`message: ${evt.target.elements.message.value}`);\n  console.log(formData);\n\n  localStorage.removeItem(localStorageKey);\n  form.reset();\n  formData.email = '';\n  formData.message = '';\n});\n"],"names":["formData","form","localStorageKey","autoFill","saveData","evt","email","message"],"mappings":"wFAGA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAkB,sBAOxB,SAASC,GAAW,CAClB,MAAMC,EAAW,KAAK,MAAM,aAAa,QAAQF,CAAe,CAAC,GAAK,GAClEE,EAAS,QACXH,EAAK,SAAS,MAAM,MAAQG,EAAS,MACrCJ,EAAS,MAAQI,EAAS,OAExBA,EAAS,UACXH,EAAK,SAAS,QAAQ,MAAQG,EAAS,QACvCJ,EAAS,QAAUI,EAAS,QAEhC,CAEAD,IAMAF,EAAK,iBAAiB,QAASI,GAAO,CAChCA,EAAI,OAAO,OAAS,QACtBL,EAAS,MAAQK,EAAI,OAAO,MACnBA,EAAI,OAAO,OAAS,YAC7BL,EAAS,QAAUK,EAAI,OAAO,OAGhC,aAAa,QAAQH,EAAiB,KAAK,UAAUF,CAAQ,CAAC,EAC9D,QAAQ,IAAI,YAAY,CAC1B,CAAC,EACD,QAAQ,IAAI,YAAY,EAQxBC,EAAK,iBAAiB,SAAUI,GAAO,CACrCA,EAAI,eAAc,EAClB,MAAMC,EAAQL,EAAK,SAAS,MAAM,MAAM,OAClCM,EAAUN,EAAK,SAAS,QAAQ,MAAM,OAE5C,GAAIK,IAAU,IAAMC,IAAY,GAC9B,OAAO,MAAM,wBAAwB,EAGvC,QAAQ,IAAI,UAAUF,EAAI,OAAO,SAAS,MAAM,KAAK,EAAE,EACvD,QAAQ,IAAI,YAAYA,EAAI,OAAO,SAAS,QAAQ,KAAK,EAAE,EAC3D,QAAQ,IAAIL,CAAQ,EAEpB,aAAa,WAAWE,CAAe,EACvCD,EAAK,MAAK,EACVD,EAAS,MAAQ,GACjBA,EAAS,QAAU,EACrB,CAAC"}